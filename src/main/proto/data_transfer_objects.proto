syntax = "proto3";

package maptool;

option java_multiple_files = true;
option java_package = "net.rptools.maptool.server.proto";
option java_outer_classname = "DataTranferObjectProtos";

import "drawing_dto.proto";
import "google/protobuf/wrappers.proto";
/*
 * For easier differentiation between protobuf classes and "normal" classes
 * protobuf classes end with "Dto" or "Msg".
 */

message ServerPolicyDto {
  bool use_strict_token_management = 1;
  bool is_movement_locked = 2;
  bool is_token_editor_locked = 3;
  bool players_can_reveal_vision = 4;
  bool gm_reveals_vision_for_unowned_tokens = 5;
  bool use_individual_views = 6;
  bool restricted_impersonation = 7;
  bool players_receive_campaign_macros = 8;
  bool use_tool_tips_for_default_roll_format = 9;
  bool use_individual_FOW = 10;
  bool is_auto_reveal_on_movement = 11;
  bool include_owned_NPCs = 12;
  WalkerMetricDto movement_metric = 13;
  bool using_astar_pathfinding = 14;
  bool vbl_blocks_move = 15;
  bool hide_map_select_ui = 16;
}

enum WalkerMetricDto {
  NO_DIAGONALS = 0;
  MANHATTAN = 1;
  ONE_TWO_ONE = 2;
  ONE_ONE_ONE = 3;
}

enum RoleDto {
  PLAYER = 0;
  GM = 1;
}

enum TopologyModeDto {
    VBL = 0;
    MBL = 1;
    COMBINED = 2;
}

// for token size_map
enum GridTypeDto {
  Square = 0;
  Gridless = 1;
  HexVertical = 2;
  HexHorizontal = 3;
  Isometric = 4;
}

message TokenDto {
  message State {
    oneof state_type {
      bool bool_value = 1;
      double double_value = 2;
    }
  }
  message Property {
    oneof property_type {
      string string_value = 1;
      double double_value = 2;
    }
  }
  string id = 1;
  bool being_impersonated = 2;
  google.protobuf.StringValue exposed_area_guid = 3;
  map<string, string> image_asset_map = 4;
  google.protobuf.StringValue current_image_asset = 5;
  int32 x = 6;
  int32 y = 7;
  int32 z = 8;
  int32 anchor_x = 9;
  int32 anchor_y = 10;
  double size_scale = 11;
  int32 last_x = 12;
  int32 last_y = 13;
  PathDto last_path = 14;
  bool snap_to_scale = 15;
  int32 width = 16;
  int32 height = 17;
  int32 iso_width = 18;
  int32 iso_height = 19;
  double scale_x = 20;
  double scale_y = 21;
  // size_map hold the footprint for different grids
  // Key:
  // Square = 0;
  // Gridless = 1;
  // HexVertical = 2;
  // HexHorizontal = 3;
  // Isometric = 4;
  map<int32, string> size_map = 22;
  bool snap_to_grid = 23;
  bool is_visible = 24;
  bool visible_only_to_owner = 25;
  int32 vbl_color_sensitivity = 26;
  int32 always_visible_tolerance = 27;
  bool is_always_visible = 28;
  AreaDto vbl = 29;
  string name = 30;
  repeated string owner_list = 31;
  int32 owner_type = 32;
  string token_shape = 33;
  string token_type = 34;
  string layer = 35;
  string property_type = 36;
  google.protobuf.Int32Value facing = 37;
  google.protobuf.Int32Value halo_color = 38;
  google.protobuf.Int32Value  vision_overlay_color = 39;
  float token_opacity = 40;
  string speech_name = 41;
  double terrain_modifier = 42;
  TerrainModifierOperationDto terrain_modifier_operation = 43;
  repeated TerrainModifierOperationDto terrain_modifiers_ignored = 44;
  bool is_flipped_x = 45;
  bool is_flipped_y = 46;
  bool is_flipped_iso = 47;
  google.protobuf.StringValue charsheet_image = 48;
  google.protobuf.StringValue portrait_image = 49;
  repeated AttachedLightSourceDto light_sources = 50;
  google.protobuf.StringValue sight_type = 51;
  bool has_sight = 52;
  bool has_image_table = 53;
  google.protobuf.StringValue image_table_name = 54;
  google.protobuf.StringValue label = 55;
  google.protobuf.StringValue notes = 56;
  google.protobuf.StringValue gm_notes = 57;
  google.protobuf.StringValue gm_name = 58;
  map<string, TokenDto.State> state = 59;
  map<string, TokenDto.Property> properties = 60;
  map<int32, MacroButtonPropertiesDto> macro_properties = 61;
  map<string, string> speech = 62;
  HeroLabDataDto hero_lab_data = 63;
  bool allow_uri_access = 64;
}

message PathDto {
  enum PointType {
    CELL_POINT = 0;
    ZONE_POINT = 1;
  }
  PointType point_type = 1;
  repeated IntPointDto cells = 2;
  repeated IntPointDto waypoints = 3;
}

enum TerrainModifierOperationDto {
    NONE = 0;
    MULTIPLY = 1;
    ADD = 2;
    BLOCK = 3;
    FREE = 4;
}

message AttachedLightSourceDto {
  string light_source_id = 1;
  string direction = 2;
}

message MacroButtonPropertiesDto {
  string macro_id = 1;
  string save_location = 2;
  int32 index = 3;
  string color_key = 4;
  string hot_key = 5;
  string command = 6;
  string label = 7;
  string group = 8;
  string sortby = 9;
  bool auto_execute = 10;
  bool include_label = 11;
  bool apply_to_tokens = 12;
  string font_color_key = 13;
  string font_size = 14;
  string min_width = 15;
  string max_width = 16;
  bool allow_player_edits = 17;
  string tool_tip = 18;
  bool display_hot_key = 19;
}

message HeroLabDataDto {
  string hero_lab_statblock_asset_id = 1;
  string name = 2;
  string summary = 3;
  string player_name = 4;
  string game_system = 5;
  string hero_lab_index = 6;
  string minion_master_index = 7;
  string minion_master_name = 8;
  bool is_ally = 9;
  bool is_dirty = 10;
  bool is_minion = 11;
  string portfolio_path = 12;
  map<string, string> hero_image_assets = 13;
}

message ScriptTypeDto {
  oneof type {
    double double_val = 1;
    string string_val = 2;
    string json_val = 3;
  }
}

message TextMessageDto {
  int32 channel = 1;
  string target = 2;
  string message = 3;
  string source = 4;
  repeated string transform = 5;
}

message PlayerDto {
  string name = 1;
  string role = 2;
}

enum AssetDtoType {
  IMAGE = 0;
  AUDIO = 1;
  HTML = 2;
  DATA = 3;
  MARKDOWN = 4;
  JAVASCRIPT = 5;
  CSS = 6;
  TEXT = 7;
  JSON = 8;
  XML = 9;
  PDF = 10;
  MTLIB = 11;
  INVAlID = 12;
}

message AssetDto {
  string md5_key = 1;
  string name = 2;
  string extension = 3;
  AssetDtoType type = 4;
}