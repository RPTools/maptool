/*
 * This software Copyright by the RPTools.net development team, and
 * licensed under the Affero GPL Version 3 or, at your option, any later
 * version.
 *
 * MapTool Source Code is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * You should have received a copy of the GNU Affero General Public
 * License * along with this source Code.  If not, please visit
 * <http://www.gnu.org/licenses/> and specifically the Affero license
 * text at <http://www.gnu.org/licenses/agpl.html>.
 */
package net.rptools.maptool.client.ui.token.edit;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import java.awt.*;
import java.lang.reflect.Method;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import net.rptools.maptool.client.swing.ColorWell;
import net.rptools.maptool.client.swing.htmleditorsplit.HtmlEditorSplit;

public class TokenPropertiesDialog {

  private JPanel mainPanel;
  private JPanel headPanel;
  private JPanel buttonPanel;
  private JLabel tokenImage;
  private JTabbedPane tabPanel;
  private HtmlEditorSplit gmNotesEditor;
  private HtmlEditorSplit playerNotesEditor;
  private JLabel ownershipList;

  /* spotless:off */

  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    createUIComponents();
    mainPanel = new JPanel();
    mainPanel.setLayout(new GridLayoutManager(3, 3, new Insets(4, 4, 4, 4), -1, -1));
    mainPanel.setName("mainPanel");
    tokenImage = new JLabel();
    tokenImage.setName("tokenImage");
    this.$$$loadLabelText$$$(tokenImage,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n", "Label.image"));
    mainPanel.add(tokenImage,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    tabPanel = new JTabbedPane();
    tabPanel.setName("TabPane");
    tabPanel.setVisible(true);
    mainPanel.add(tabPanel,
        new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null,
            new Dimension(1, 1), null, 0, false));
    final JPanel panel1 = new JPanel();
    panel1.setLayout(new GridLayoutManager(1, 1, new Insets(5, 5, 5, 5), -1, -1));
    panel1.setName("notesPanel");
    panel1.setVisible(false);
    tabPanel.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.tab.notes"), panel1);
    panel1.add(playerNotesEditor,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JPanel panel2 = new JPanel();
    panel2.setLayout(new GridLayoutManager(1, 1, new Insets(5, 5, 5, 5), -1, -1));
    panel2.setName("gmNotesPanel");
    panel2.setVisible(false);
    tabPanel.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.label.gmnotes"), panel2);
    panel2.add(gmNotesEditor,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JPanel panel3 = new JPanel();
    panel3.setLayout(new GridLayoutManager(1, 2, new Insets(5, 5, 5, 5), -1, -1));
    panel3.setName("propertiesPanel");
    panel3.setVisible(false);
    tabPanel.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.tab.properties"), panel3);
    final JLabel label1 = new JLabel();
    label1.setName("propertiesTable");
    label1.setText("propertiesTable");
    panel3.add(label1,
        new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JPanel panel4 = new JPanel();
    panel4.setLayout(new GridLayoutManager(17, 5, new Insets(4, 4, 4, 4), -1, -1));
    panel4.setVisible(false);
    tabPanel.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.tab.vbl"), panel4);
    final JPanel panel5 = new JPanel();
    panel5.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    panel5.setName("vblPreviewPanel");
    panel4.add(panel5,
        new GridConstraints(0, 3, 16, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    panel5.setBorder(
        BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)),
            this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
                "EditTokenDialog.border.title.vbl.preview"), TitledBorder.DEFAULT_JUSTIFICATION,
            TitledBorder.DEFAULT_POSITION,
            this.$$$getFont$$$("Dialog", Font.BOLD, 12, panel5.getFont()), new Color(-13538620)));
    final JLabel label2 = new JLabel();
    label2.setName("vblPreview");
    this.$$$loadLabelText$$$(label2,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.button.vbl.preview"));
    panel5.add(label2,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JPanel panel6 = new JPanel();
    panel6.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
    panel4.add(panel6,
        new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JToggleButton toggleButton1 = new JToggleButton();
    toggleButton1.setName("mblToggle");
    toggleButton1.setText("");
    panel6.add(toggleButton1,
        new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JToggleButton toggleButton2 = new JToggleButton();
    toggleButton2.setName("wallVblToggle");
    toggleButton2.setText("");
    panel6.add(toggleButton2,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JToggleButton toggleButton3 = new JToggleButton();
    toggleButton3.setName("hillVblToggle");
    toggleButton3.setText("");
    panel6.add(toggleButton3,
        new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JToggleButton toggleButton4 = new JToggleButton();
    toggleButton4.setName("pitVblToggle");
    toggleButton4.setText("");
    panel6.add(toggleButton4,
        new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JCheckBox checkBox1 = new JCheckBox();
    checkBox1.setActionCommand("Hide Preview");
    checkBox1.setName("hideTokenCheckbox");
    this.$$$loadButtonText$$$(checkBox1,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.vbl.preview"));
    checkBox1.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.label.vbl.preview.tooltip"));
    checkBox1.setVisible(true);
    panel4.add(checkBox1, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final Spacer spacer1 = new Spacer();
    panel4.add(spacer1, new GridConstraints(16, 3, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null,
        0, false));
    final Spacer spacer2 = new Spacer();
    panel4.add(spacer2, new GridConstraints(16, 4, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0,
        false));
    final JLabel label3 = new JLabel();
    label3.setHorizontalAlignment(2);
    label3.setName("ignoreColorLabel");
    this.$$$loadLabelText$$$(label3,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.vbl.color"));
    label3.setVisible(true);
    panel4.add(label3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final ColorWell colorWell1 = new ColorWell();
    Font colorWell1Font = UIManager.getFont("Panel.font");
    if (colorWell1Font != null)
      colorWell1.setFont(colorWell1Font);
    colorWell1.setName("vblIgnoreColorWell");
    colorWell1.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.label.vbl.well"));
    colorWell1.setVerifyInputWhenFocusTarget(true);
    colorWell1.setVisible(true);
    panel4.add(colorWell1,
        new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label4 = new JLabel();
    Font label4Font = this.$$$getFont$$$("SansSerif", Font.BOLD, -1, label4.getFont());
    if (label4Font != null)
      label4.setFont(label4Font);
    label4.setName("optimizationLabel");
    this.$$$loadLabelText$$$(label4,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.vbl.optimize"));
    label4.setVisible(true);
    panel4.add(label4,
        new GridConstraints(5, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label5 = new JLabel();
    label5.setHorizontalAlignment(2);
    label5.setName("jtsDistanceToleranceLabel");
    this.$$$loadLabelText$$$(label5,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.vbl.level"));
    label5.setVisible(true);
    panel4.add(label5,
        new GridConstraints(6, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label6 = new JLabel();
    label6.setHorizontalAlignment(2);
    label6.setName("alphaSensitivityLabel");
    this.$$$loadLabelText$$$(label6,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.vbl.sensitivity"));
    label6.setVisible(true);
    panel4.add(label6,
        new GridConstraints(3, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JSpinner spinner1 = new JSpinner();
    spinner1.setName("alphaSensitivitySpinner");
    spinner1.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.label.vbl.sensitivity.tooltip"));
    spinner1.setVisible(true);
    panel4.add(spinner1,
        new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JCheckBox checkBox2 = new JCheckBox();
    checkBox2.setActionCommand("Hide Preview");
    checkBox2.setName("inverseVblCheckbox");
    this.$$$loadButtonText$$$(checkBox2,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.vbl.invert"));
    checkBox2.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.label.vbl.invert.tooltip"));
    checkBox2.setVisible(true);
    panel4.add(checkBox2, new GridConstraints(4, 0, 1, 3, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JToggleButton toggleButton5 = new JToggleButton();
    toggleButton5.setName("vblColorPickerToggleButton");
    toggleButton5.setText("");
    toggleButton5.setToolTipText(
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.vbl.toggle"));
    toggleButton5.setVisible(true);
    panel4.add(toggleButton5,
        new GridConstraints(1, 2, 2, 1, GridConstraints.ANCHOR_SOUTHEAST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label7 = new JLabel();
    label7.setHorizontalAlignment(2);
    label7.setName("jtsDistanceToleranceLabel");
    this.$$$loadLabelText$$$(label7,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.vbl.method"));
    label7.setVisible(true);
    panel4.add(label7,
        new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JComboBox comboBox1 = new JComboBox();
    comboBox1.setActionCommand("comboBoxChanged");
    comboBox1.setName("jtsMethodComboBox");
    comboBox1.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.drop.vbl.optimize.tooltip"));
    comboBox1.setVisible(true);
    panel4.add(comboBox1,
        new GridConstraints(7, 1, 1, 2, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JSpinner spinner2 = new JSpinner();
    spinner2.setName("jtsDistanceToleranceSpinner");
    spinner2.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.spinner.tolerance.tooltip"));
    spinner2.setVisible(true);
    panel4.add(spinner2,
        new GridConstraints(6, 2, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label8 = new JLabel();
    Font label8Font = this.$$$getFont$$$("SansSerif", Font.BOLD, -1, label8.getFont());
    if (label8Font != null)
      label8.setFont(label8Font);
    label8.setName("visibilityLabel");
    this.$$$loadLabelText$$$(label8,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.vbl.visiblity"));
    label8.setVisible(true);
    panel4.add(label8,
        new GridConstraints(9, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JCheckBox checkBox3 = new JCheckBox();
    checkBox3.setActionCommand("Always Show\t");
    checkBox3.setHorizontalAlignment(0);
    checkBox3.setName("copyOrMoveCheckbox");
    checkBox3.setSelected(true);
    this.$$$loadButtonText$$$(checkBox3,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.option.vbl.erase"));
    checkBox3.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.option.vbl.erase.tooltip"));
    checkBox3.setVisible(true);
    panel4.add(checkBox3,
        new GridConstraints(8, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JCheckBox checkBox4 = new JCheckBox();
    checkBox4.setActionCommand("Always Show\t");
    checkBox4.setHorizontalAlignment(0);
    checkBox4.setName("alwaysVisibleButton");
    checkBox4.setSelected(true);
    this.$$$loadButtonText$$$(checkBox4,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.vbl.over"));
    checkBox4.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.label.vbl.over.tooltip"));
    checkBox4.setVisible(true);
    panel4.add(checkBox4,
        new GridConstraints(10, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label9 = new JLabel();
    label9.setHorizontalAlignment(2);
    this.$$$loadLabelText$$$(label9,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.vbl.tolerance"));
    label9.setVisible(true);
    panel4.add(label9,
        new GridConstraints(11, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JSpinner spinner3 = new JSpinner();
    spinner3.setName("visibilityToleranceSpinner");
    spinner3.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.vbl.explanation.tooltip"));
    spinner3.setVisible(true);
    panel4.add(spinner3,
        new GridConstraints(11, 2, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JButton button1 = new JButton();
    button1.setActionCommand("Generate VBL\t");
    button1.setName("autoGenerateVblButton");
    this.$$$loadButtonText$$$(button1,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.button.vbl"));
    button1.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.button.vbl.tooltip"));
    button1.setVisible(true);
    panel4.add(button1, new GridConstraints(12, 0, 1, 3, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JButton button2 = new JButton();
    button2.setActionCommand("Clear VBL");
    button2.setName("clearVblButton");
    this.$$$loadButtonText$$$(button2,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.button.vbl.clear"));
    button2.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.button.vbl.clear.tooltip"));
    button2.setVisible(true);
    panel4.add(button2, new GridConstraints(13, 0, 1, 3, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JButton button3 = new JButton();
    button3.setActionCommand("Clear VBL");
    button3.setName("transferVblToMap");
    this.$$$loadButtonText$$$(button3,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.button.vbl.tomap"));
    button3.setVisible(true);
    panel4.add(button3, new GridConstraints(14, 0, 1, 3, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JButton button4 = new JButton();
    button4.setActionCommand("Clear VBL");
    button4.setName("transferVblFromMap");
    this.$$$loadButtonText$$$(button4,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.button.vbl.frommap"));
    button4.setVisible(true);
    panel4.add(button4, new GridConstraints(15, 0, 1, 3, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JPanel panel7 = new JPanel();
    panel7.setLayout(new GridLayoutManager(1, 1, new Insets(4, 4, 4, 4), -1, -1));
    panel7.setVisible(true);
    tabPanel.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.tab.state"), panel7);
    final JScrollPane scrollPane1 = new JScrollPane();
    scrollPane1.setHorizontalScrollBarPolicy(31);
    panel7.add(scrollPane1,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JPanel panel8 = new JPanel();
    panel8.setLayout(new BorderLayout(0, 0));
    panel8.setName("statesPanel");
    scrollPane1.setViewportView(panel8);
    final JPanel panel9 = new JPanel();
    panel9.setLayout(new GridLayoutManager(2, 2, new Insets(4, 4, 4, 4), -1, -1));
    panel9.setVisible(false);
    tabPanel.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.tab.speech"), panel9);
    final JScrollPane scrollPane2 = new JScrollPane();
    scrollPane2.setHorizontalScrollBarPolicy(31);
    panel9.add(scrollPane2,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JTable table1 = new JTable();
    table1.setName("speechTable");
    scrollPane2.setViewportView(table1);
    final JButton button5 = new JButton();
    button5.setActionCommand("Clear All");
    button5.setName("speechClearAllButton");
    this.$$$loadButtonText$$$(button5,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n", "Button.clearall"));
    panel9.add(button5,
        new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final Spacer spacer3 = new Spacer();
    panel9.add(spacer3, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0,
        false));
    final JPanel panel10 = new JPanel();
    panel10.setLayout(new GridLayoutManager(2, 2, new Insets(4, 4, 4, 4), -1, -1));
    panel10.setName("ownershipPanel");
    panel10.setVisible(false);
    tabPanel.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.tab.ownership"), panel10);
    final JLabel label10 = new JLabel();
    label10.setName("ownershipList");
    label10.setText("");
    panel10.add(label10,
        new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JCheckBox checkBox5 = new JCheckBox();
    checkBox5.setActionCommand("All Players");
    checkBox5.setName("@ownedByAll");
    this.$$$loadButtonText$$$(checkBox5,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.allplayers"));
    panel10.add(checkBox5,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final Spacer spacer4 = new Spacer();
    panel10.add(spacer4, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0,
        false));
    final JPanel panel11 = new JPanel();
    panel11.setLayout(new GridLayoutManager(7, 10, new Insets(4, 4, 4, 4), -1, -1));
    panel11.setVisible(false);
    tabPanel.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.tab.config"), panel11);
    final JLabel label11 = new JLabel();
    this.$$$loadLabelText$$$(label11,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.shape"));
    panel11.add(label11,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label12 = new JLabel();
    this.$$$loadLabelText$$$(label12,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.snaptogrid"));
    panel11.add(label12,
        new GridConstraints(0, 3, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JCheckBox checkBox6 = new JCheckBox();
    checkBox6.setName("@visible");
    checkBox6.setText("");
    panel11.add(checkBox6,
        new GridConstraints(0, 7, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label13 = new JLabel();
    this.$$$loadLabelText$$$(label13,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.size"));
    panel11.add(label13,
        new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JComboBox comboBox2 = new JComboBox();
    comboBox2.setActionCommand("comboBoxChanged");
    comboBox2.setName("size");
    panel11.add(comboBox2, new GridConstraints(1, 1, 1, 2, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JComboBox comboBox3 = new JComboBox();
    comboBox3.setActionCommand("comboBoxChanged");
    comboBox3.setName("shape");
    panel11.add(comboBox3, new GridConstraints(0, 1, 1, 2, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JLabel label14 = new JLabel();
    label14.setName("visibleOnlyToOwnerLabel");
    this.$$$loadLabelText$$$(label14,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.visible.owner"));
    panel11.add(label14,
        new GridConstraints(1, 3, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label15 = new JLabel();
    label15.setName("visibleLabel");
    this.$$$loadLabelText$$$(label15,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.visible"));
    panel11.add(label15,
        new GridConstraints(0, 6, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label16 = new JLabel();
    label16.setName("terrainModifierLabel");
    this.$$$loadLabelText$$$(label16,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.terrain.mod"));
    label16.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.label.terrain.mod.tooltip"));
    panel11.add(label16,
        new GridConstraints(1, 6, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JComboBox comboBox4 = new JComboBox();
    comboBox4.setActionCommand("comboBoxChanged");
    final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
    defaultComboBoxModel1.addElement("Token.TerrainModifierOperation.MULTIPLY");
    comboBox4.setModel(defaultComboBoxModel1);
    comboBox4.setName("terrainModifierOperation");
    comboBox4.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.combo.terrain.mod"));
    panel11.add(comboBox4,
        new GridConstraints(1, 7, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JTextField textField1 = new JTextField();
    textField1.setColumns(4);
    textField1.setName("terrainModifier");
    textField1.setText("");
    textField1.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.label.terrain.mod.tooltip"));
    panel11.add(textField1, new GridConstraints(1, 8, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JLabel label17 = new JLabel();
    this.$$$loadLabelText$$$(label17,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.properties"));
    panel11.add(label17,
        new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JComboBox comboBox5 = new JComboBox();
    comboBox5.setActionCommand("comboBoxChanged");
    comboBox5.setName("propertyTypeCombo");
    panel11.add(comboBox5, new GridConstraints(2, 1, 1, 2, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JLabel label18 = new JLabel();
    label18.setName("tokenOpacityLabel");
    this.$$$loadLabelText$$$(label18,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.opacity"));
    label18.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.label.opacity.tooltip"));
    panel11.add(label18,
        new GridConstraints(2, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label19 = new JLabel();
    this.$$$loadLabelText$$$(label19,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.sight.has"));
    panel11.add(label19,
        new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JCheckBox checkBox7 = new JCheckBox();
    checkBox7.setName("@hasSight");
    checkBox7.setText("");
    panel11.add(checkBox7,
        new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JPanel panel12 = new JPanel();
    panel12.setLayout(new GridLayoutManager(2, 5, new Insets(0, 0, 0, 0), -1, -1));
    panel11.add(panel12,
        new GridConstraints(6, 0, 1, 9, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JPanel panel13 = new JPanel();
    panel13.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    panel13.setName("tokenLayoutPanel");
    panel12.add(panel13,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    panel13.setBorder(
        BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)),
            this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
                "EditTokenDialog.border.title.layout"), TitledBorder.DEFAULT_JUSTIFICATION,
            TitledBorder.DEFAULT_POSITION,
            this.$$$getFont$$$("Dialog", Font.BOLD, 12, panel13.getFont()), new Color(-13538620)));
    final JLabel label20 = new JLabel();
    label20.setName("tokenLayout");
    this.$$$loadLabelText$$$(label20,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.border.title.layout"));
    panel13.add(label20,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JPanel panel14 = new JPanel();
    panel14.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    panel14.setName("portraitPanel");
    panel12.add(panel14,
        new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    panel14.setBorder(
        BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)),
            this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
                "EditTokenDialog.border.title.portrait"), TitledBorder.DEFAULT_JUSTIFICATION,
            TitledBorder.DEFAULT_POSITION,
            this.$$$getFont$$$("Dialog", Font.BOLD, 12, panel14.getFont()), new Color(-13538620)));
    final JLabel label21 = new JLabel();
    label21.setName("portrait");
    this.$$$loadLabelText$$$(label21,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.border.title.portrait"));
    panel14.add(label21,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JPanel panel15 = new JPanel();
    panel15.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    panel15.setName("charsheetPanel");
    panel12.add(panel15,
        new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    panel15.setBorder(
        BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)),
            this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
                "EditTokenDialog.border.title.handout"), TitledBorder.DEFAULT_JUSTIFICATION,
            TitledBorder.DEFAULT_POSITION,
            this.$$$getFont$$$("Dialog", Font.BOLD, 12, panel15.getFont()), new Color(-13538620)));
    final JLabel label22 = new JLabel();
    label22.setName("charsheet");
    this.$$$loadLabelText$$$(label22,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.border.title.charsheet"));
    panel15.add(label22,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final Spacer spacer5 = new Spacer();
    panel12.add(spacer5, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null,
        0, false));
    final Spacer spacer6 = new Spacer();
    panel12.add(spacer6, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null,
        0, false));
    final Spacer spacer7 = new Spacer();
    panel12.add(spacer7, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0,
        false));
    final JComboBox comboBox6 = new JComboBox();
    comboBox6.setActionCommand("comboBoxChanged");
    comboBox6.setName("sightTypeCombo");
    panel11.add(comboBox6, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JComboBox comboBox7 = new JComboBox();
    comboBox7.setActionCommand("comboBoxChanged");
    comboBox7.setName("imageTableCombo");
    panel11.add(comboBox7, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JCheckBox checkBox8 = new JCheckBox();
    checkBox8.setName("@hasImageTable");
    checkBox8.setText("");
    panel11.add(checkBox8,
        new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label23 = new JLabel();
    this.$$$loadLabelText$$$(label23,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.image"));
    panel11.add(label23,
        new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JCheckBox checkBox9 = new JCheckBox();
    checkBox9.setName("@visibleOnlyToOwner");
    checkBox9.setText("");
    panel11.add(checkBox9,
        new GridConstraints(1, 5, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JCheckBox checkBox10 = new JCheckBox();
    checkBox10.setName("@snapToGrid");
    checkBox10.setText("");
    panel11.add(checkBox10,
        new GridConstraints(0, 5, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label24 = new JLabel();
    label24.setName("tokenOpacityValueLabel");
    this.$$$loadLabelText$$$(label24,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.opacity.100"));
    panel11.add(label24,
        new GridConstraints(2, 5, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label25 = new JLabel();
    label25.setName("ignoreTerrainModifierLabel");
    this.$$$loadLabelText$$$(label25,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.terrain.ignore"));
    label25.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.label.terrain.ignore.tooltip"));
    panel11.add(label25,
        new GridConstraints(2, 6, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JList list1 = new JList();
    list1.setName("terrainModifiersIgnored");
    list1.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.label.terrain.ignore.tooltip"));
    list1.setVisibleRowCount(0);
    panel11.add(list1,
        new GridConstraints(2, 7, 3, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final Spacer spacer8 = new Spacer();
    panel11.add(spacer8, new GridConstraints(0, 9, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null,
        null, 0, false));
    final JSlider slider1 = new JSlider();
    slider1.setMajorTickSpacing(10);
    slider1.setMinimum(0);
    slider1.setMinorTickSpacing(5);
    slider1.setName("tokenOpacitySlider");
    slider1.setOrientation(1);
    slider1.setPaintTicks(true);
    slider1.setSnapToTicks(true);
    slider1.setValue(100);
    slider1.setValueIsAdjusting(true);
    panel11.add(slider1,
        new GridConstraints(2, 4, 4, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            new Dimension(-1, 100), 0, false));
    final Spacer spacer9 = new Spacer();
    panel11.add(spacer9, new GridConstraints(5, 6, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0,
        false));
    final JPanel panel16 = new JPanel();
    panel16.setLayout(new GridLayoutManager(2, 4, new Insets(4, 4, 4, 4), -1, -1));
    panel16.setVisible(false);
    tabPanel.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.tab.libToken"), panel16);
    final JLabel label26 = new JLabel();
    this.$$$loadLabelText$$$(label26,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "Label.allowURIAccess"));
    panel16.add(label26,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label27 = new JLabel();
    label27.setName("Label.LibURIError");
    label27.setText("");
    panel16.add(label27,
        new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final Spacer spacer10 = new Spacer();
    panel16.add(spacer10, new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0,
        false));
    final JCheckBox checkBox11 = new JCheckBox();
    checkBox11.setName("@allowURIAccess");
    checkBox11.setText("");
    panel16.add(checkBox11,
        new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, 1,
            1, null, new Dimension(10, 10), null, 0, false));
    final Spacer spacer11 = new Spacer();
    panel16.add(spacer11, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null,
        0, false));
    final JPanel panel17 = new JPanel();
    panel17.setLayout(new GridLayoutManager(5, 4, new Insets(4, 4, 4, 4), -1, -1));
    panel17.setVisible(false);
    tabPanel.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.tab.hero"), panel17);
    final JTabbedPane tabbedPane1 = new JTabbedPane();
    tabbedPane1.setName("StatblockTabPane");
    tabbedPane1.setTabPlacement(1);
    tabbedPane1.setToolTipText("View the statblocks from Hero Lab");
    panel17.add(tabbedPane1,
        new GridConstraints(4, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JPanel panel18 = new JPanel();
    panel18.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    tabbedPane1.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.tab.hero.html"), panel18);
    final JScrollPane scrollPane3 = new JScrollPane();
    panel18.add(scrollPane3,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JEditorPane editorPane1 = new JEditorPane();
    editorPane1.setContentType("text/plain");
    editorPane1.setEditable(false);
    editorPane1.setName("HTMLstatblockTextArea");
    editorPane1.setText("");
    scrollPane3.setViewportView(editorPane1);
    final JPanel panel19 = new JPanel();
    panel19.setLayout(new GridLayoutManager(3, 4, new Insets(0, 0, 0, 0), -1, -1));
    panel19.setName("xmlStatblockPanel");
    panel19.setVisible(false);
    tabbedPane1.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.tab.hero.xml"), panel19);
    final JTextField textField2 = new JTextField();
    textField2.setName("xmlStatblockSearchTextField");
    textField2.setText("");
    textField2.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.label.hero.statBlockSearch.tooltip"));
    panel19.add(textField2, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JButton button6 = new JButton();
    button6.setActionCommand("Find");
    button6.setName("xmlStatblockSearchButton");
    this.$$$loadButtonText$$$(button6,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.action.hero.statBlockRTextScroll"));
    button6.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.button.hero.statBlockSearch.tooltip"));
    panel19.add(button6,
        new GridConstraints(1, 2, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label28 = new JLabel();
    label28.setName("xmlStatblockRTextScrollPane");
    label28.setText("");
    panel19.add(label28,
        new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label29 = new JLabel();
    label29.setName("expressionLabel");
    this.$$$loadLabelText$$$(label29,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.hero.statBlockSearch"));
    panel19.add(label29,
        new GridConstraints(1, 0, 2, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final Spacer spacer12 = new Spacer();
    panel19.add(spacer12, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null,
        0, false));
    final Spacer spacer13 = new Spacer();
    panel19.add(spacer13, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0,
        false));
    final JPanel panel20 = new JPanel();
    panel20.setLayout(new GridLayoutManager(3, 4, new Insets(0, 0, 0, 0), -1, -1));
    panel20.setName("textStatblockPanel");
    panel20.setVisible(false);
    tabbedPane1.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.tab.hero.text"), panel20);
    final JButton button7 = new JButton();
    button7.setActionCommand("Find");
    button7.setName("textStatblockSearchButton");
    this.$$$loadButtonText$$$(button7,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.action.hero.statBlockRTextScroll"));
    button7.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.button.hero.statBlockSearch.tooltip"));
    panel20.add(button7,
        new GridConstraints(1, 2, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JTextField textField3 = new JTextField();
    textField3.setName("textStatblockSearchTextField");
    textField3.setText("");
    textField3.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.label.hero.statBlockSearch.tooltip"));
    panel20.add(textField3, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JLabel label30 = new JLabel();
    label30.setName("textStatblockRTextScrollPane");
    label30.setText("");
    panel20.add(label30,
        new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label31 = new JLabel();
    label31.setName("expressionLabel");
    this.$$$loadLabelText$$$(label31,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.hero.statBlockSearch"));
    panel20.add(label31,
        new GridConstraints(1, 0, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final Spacer spacer14 = new Spacer();
    panel20.add(spacer14, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null,
        0, false));
    final Spacer spacer15 = new Spacer();
    panel20.add(spacer15, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0,
        false));
    final JPanel panel21 = new JPanel();
    panel21.setLayout(new GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
    panel21.setVisible(false);
    tabbedPane1.addTab(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.tab.hero.images"), panel21);
    final JScrollPane scrollPane4 = new JScrollPane();
    panel21.add(scrollPane4,
        new GridConstraints(0, 1, 4, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JList list2 = new JList();
    list2.setName("heroLabImagesList");
    scrollPane4.setViewportView(list2);
    final JButton button8 = new JButton();
    button8.setActionCommand("Set as Token Portrait");
    button8.setName("setAsPortraitButton");
    this.$$$loadButtonText$$$(button8,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.button.hero.setAsTokenPortrait"));
    panel21.add(button8, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JButton button9 = new JButton();
    button9.setActionCommand("Set as Token Image");
    button9.setName("setAsImageButton");
    this.$$$loadButtonText$$$(button9,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.button.hero.setAsTokenImage"));
    panel21.add(button9, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JButton button10 = new JButton();
    button10.setActionCommand("Set as Token Handout");
    button10.setName("setAsHandoutButton");
    this.$$$loadButtonText$$$(button10,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.button.hero.setAsTokenHandout"));
    panel21.add(button10, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final Spacer spacer16 = new Spacer();
    panel21.add(spacer16, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0,
        false));
    final Spacer spacer17 = new Spacer();
    panel21.add(spacer17, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null,
        0, false));
    final JLabel label32 = new JLabel();
    label32.setName("summaryLabel");
    this.$$$loadLabelText$$$(label32,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.hero.summary"));
    panel17.add(label32,
        new GridConstraints(0, 0, 2, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label33 = new JLabel();
    label33.setName("portfolioLabel");
    this.$$$loadLabelText$$$(label33,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.hero.portfolio"));
    panel17.add(label33,
        new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label34 = new JLabel();
    this.$$$loadLabelText$$$(label34,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.hero.last"));
    panel17.add(label34,
        new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label35 = new JLabel();
    label35.setName("summaryText");
    label35.setText("");
    panel17.add(label35,
        new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label36 = new JLabel();
    label36.setName("lastModified");
    label36.setText("");
    panel17.add(label36,
        new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label37 = new JLabel();
    label37.setAutoscrolls(true);
    label37.setName("portfolioLocation");
    label37.setText("");
    panel17.add(label37,
        new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JButton button11 = new JButton();
    button11.setAlignmentY(0.0f);
    button11.setIconTextGap(2);
    button11.setName("refreshDataButton");
    button11.setText("");
    button11.setToolTipText(this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
        "EditTokenDialog.button.hero.refresh.tooltip.off"));
    panel17.add(button11,
        new GridConstraints(0, 2, 3, 1, GridConstraints.ANCHOR_NORTHEAST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JCheckBox checkBox12 = new JCheckBox();
    checkBox12.setActionCommand("Is Ally?");
    checkBox12.setEnabled(false);
    checkBox12.setName("isAllyCheckBox");
    this.$$$loadButtonText$$$(checkBox12,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.hero.isAlly"));
    panel17.add(checkBox12,
        new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final Spacer spacer18 = new Spacer();
    panel17.add(spacer18, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null,
        0, false));
    final Spacer spacer19 = new Spacer();
    panel17.add(spacer19, new GridConstraints(4, 3, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0,
        false));
    headPanel = new JPanel();
    headPanel.setLayout(new GridLayoutManager(4, 4, new Insets(0, 0, 0, 0), -1, -1));
    headPanel.setName("");
    mainPanel.add(headPanel,
        new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label38 = new JLabel();
    this.$$$loadLabelText$$$(label38,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n", "Label.name"));
    headPanel.add(label38,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JTextField textField4 = new JTextField();
    textField4.setColumns(30);
    Font textField4Font = this.$$$getFont$$$("SansSerif", Font.BOLD, -1, textField4.getFont());
    if (textField4Font != null)
      textField4.setFont(textField4Font);
    textField4.setName("@name");
    textField4.setText("");
    headPanel.add(textField4, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JLabel label39 = new JLabel();
    label39.setName("tokenGMNameLabel");
    this.$$$loadLabelText$$$(label39,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n", "Label.gmname"));
    headPanel.add(label39,
        new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JTextField textField5 = new JTextField();
    textField5.setColumns(30);
    Font textField5Font = this.$$$getFont$$$("SansSerif", Font.BOLD, -1, textField5.getFont());
    if (textField5Font != null)
      textField5.setFont(textField5Font);
    textField5.setName("@GMName");
    textField5.setText("");
    headPanel.add(textField5, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JComboBox comboBox8 = new JComboBox();
    comboBox8.setActionCommand("comboBoxChanged");
    comboBox8.setName("type");
    headPanel.add(comboBox8,
        new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JLabel label40 = new JLabel();
    this.$$$loadLabelText$$$(label40,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n",
            "EditTokenDialog.label.label"));
    headPanel.add(label40,
        new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JTextField textField6 = new JTextField();
    textField6.setName("@label");
    textField6.setText("");
    headPanel.add(textField6, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final JLabel label41 = new JLabel();
    this.$$$loadLabelText$$$(label41,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n", "Label.speechName"));
    headPanel.add(label41,
        new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JTextField textField7 = new JTextField();
    textField7.setName("@speechName");
    textField7.setText("");
    headPanel.add(textField7, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
        null, 0, false));
    final Spacer spacer20 = new Spacer();
    headPanel.add(spacer20, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null,
        null, 0, false));
    buttonPanel = new JPanel();
    buttonPanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(buttonPanel,
        new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_SOUTHEAST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JButton button12 = new JButton();
    button12.setActionCommand("Cancel");
    button12.setName("cancelButton");
    this.$$$loadButtonText$$$(button12,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n", "Button.cancel"));
    buttonPanel.add(button12,
        new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final JButton button13 = new JButton();
    button13.setActionCommand("OK");
    button13.setName("okButton");
    this.$$$loadButtonText$$$(button13,
        this.$$$getMessageFromBundle$$$("net/rptools/maptool/language/i18n", "Button.ok"));
    buttonPanel.add(button13,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null,
            null, 0, false));
    final Spacer spacer21 = new Spacer();
    mainPanel.add(spacer21, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_VERTICAL, 1,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null,
        null, 0, false));
  }

  /**
   * @noinspection ALL
   */
  private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
    if (currentFont == null)
      return null;
    String resultName;
    if (fontName == null) {
      resultName = currentFont.getName();
    } else {
      Font testFont = new Font(fontName, Font.PLAIN, 10);
      if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
        resultName = fontName;
      } else {
        resultName = currentFont.getName();
      }
    }
    Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(),
        size >= 0 ? size : currentFont.getSize());
    boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
    Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize())
        : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
    return fontWithFallback instanceof FontUIResource ? fontWithFallback
        : new FontUIResource(fontWithFallback);
  }

  private static Method $$$cachedGetBundleMethod$$$ = null;

  private String $$$getMessageFromBundle$$$(String path, String key) {
    ResourceBundle bundle;
    try {
      Class<?> thisClass = this.getClass();
      if ($$$cachedGetBundleMethod$$$ == null) {
        Class<?> dynamicBundleClass = thisClass.getClassLoader()
            .loadClass("com.intellij.DynamicBundle");
        $$$cachedGetBundleMethod$$$ = dynamicBundleClass.getMethod("getBundle", String.class,
            Class.class);
      }
      bundle = (ResourceBundle) $$$cachedGetBundleMethod$$$.invoke(null, path, thisClass);
    } catch (Exception e) {
      bundle = ResourceBundle.getBundle(path);
    }
    return bundle.getString(key);
  }

  /**
   * @noinspection ALL
   */
  private void $$$loadLabelText$$$(JLabel component, String text) {
    StringBuffer result = new StringBuffer();
    boolean haveMnemonic = false;
    char mnemonic = '\0';
    int mnemonicIndex = -1;
    for (int i = 0; i < text.length(); i++) {
      if (text.charAt(i) == '&') {
        i++;
        if (i == text.length())
          break;
        if (!haveMnemonic && text.charAt(i) != '&') {
          haveMnemonic = true;
          mnemonic = text.charAt(i);
          mnemonicIndex = result.length();
        }
      }
      result.append(text.charAt(i));
    }
    component.setText(result.toString());
    if (haveMnemonic) {
      component.setDisplayedMnemonic(mnemonic);
      component.setDisplayedMnemonicIndex(mnemonicIndex);
    }
  }

  /**
   * @noinspection ALL
   */
  private void $$$loadButtonText$$$(AbstractButton component, String text) {
    StringBuffer result = new StringBuffer();
    boolean haveMnemonic = false;
    char mnemonic = '\0';
    int mnemonicIndex = -1;
    for (int i = 0; i < text.length(); i++) {
      if (text.charAt(i) == '&') {
        i++;
        if (i == text.length())
          break;
        if (!haveMnemonic && text.charAt(i) != '&') {
          haveMnemonic = true;
          mnemonic = text.charAt(i);
          mnemonicIndex = result.length();
        }
      }
      result.append(text.charAt(i));
    }
    component.setText(result.toString());
    if (haveMnemonic) {
      component.setMnemonic(mnemonic);
      component.setDisplayedMnemonicIndex(mnemonicIndex);
    }
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return mainPanel;
  }

  /* spotless:on */
  public TokenPropertiesDialog() {}

  private void createUIComponents() {
    gmNotesEditor = new HtmlEditorSplit();
    gmNotesEditor.setName("gmNotesEditor");
    playerNotesEditor = new HtmlEditorSplit();
    playerNotesEditor.setName("playerNotesEditor");
  }
}
