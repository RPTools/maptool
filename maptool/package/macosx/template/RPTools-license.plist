<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>LPic</key>
	<array>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAAAAgAAAAAAAAAAAAQAAA==</data>
			<key>ID</key>
			<string>5000</string>
			<key>Name</key>
			<string></string>
		</dict>
	</array>
	<key>STR#</key>
	<array>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYPRW5nbGlzaCBkZWZhdWx0BUFncmVlCERpc2FncmVlBVByaW50B1NhdmUuLi56SWYgeW91IGFncmVlIHdpdGggdGhlIHRlcm1zIG9mIHRoaXMgbGljZW5zZSwgY2xpY2sgIkFncmVlIiB0byBhY2Nlc3MgdGhlIHNvZnR3YXJlLiAgSWYgeW91IGRvIG5vdCBhZ3JlZSwgcHJlc3MgIkRpc2FncmVlLiI=</data>
			<key>ID</key>
			<string>5000</string>
			<key>Name</key>
			<string>English buttons</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYHRGV1dHNjaAtBa3plcHRpZXJlbghBYmxlaG5lbgdEcnVja2VuClNpY2hlcm4uLi7nS2xpY2tlbiBTaWUgaW4g0kFremVwdGllcmVu0ywgd2VubiBTaWUgbWl0IGRlbiBCZXN0aW1tdW5nZW4gZGVzIFNvZnR3YXJlLUxpemVuenZlcnRyYWdzIGVpbnZlcnN0YW5kZW4gc2luZC4gRmFsbHMgbmljaHQsIGJpdHRlINJBYmxlaG5lbtMgYW5rbGlja2VuLiBTaWUga5pubmVuIGRpZSBTb2Z0d2FyZSBudXIgaW5zdGFsbGllcmVuLCB3ZW5uIFNpZSDSQWt6ZXB0aWVyZW7TIGFuZ2VrbGlja3QgaGFiZW4u</data>
			<key>ID</key>
			<string>5001</string>
			<key>Name</key>
			<string>German</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYHRW5nbGlzaAVBZ3JlZQhEaXNhZ3JlZQVQcmludAdTYXZlLi4ue0lmIHlvdSBhZ3JlZSB3aXRoIHRoZSB0ZXJtcyBvZiB0aGlzIGxpY2Vuc2UsIHByZXNzICJBZ3JlZSIgdG8gaW5zdGFsbCB0aGUgc29mdHdhcmUuICBJZiB5b3UgZG8gbm90IGFncmVlLCBwcmVzcyAiRGlzYWdyZWUiLg==</data>
			<key>ID</key>
			<string>5002</string>
			<key>Name</key>
			<string>English</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYHRXNwYZZvbAdBY2VwdGFyCk5vIGFjZXB0YXIISW1wcmltaXIKR3VhcmRhci4uLsBTaSBlc3SHIGRlIGFjdWVyZG8gY29uIGxvcyB0jnJtaW5vcyBkZSBlc3RhIGxpY2VuY2lhLCBwdWxzZSAiQWNlcHRhciIgcGFyYSBpbnN0YWxhciBlbCBzb2Z0d2FyZS4gRW4gZWwgc3VwdWVzdG8gZGUgcXVlIG5vIGVzdI4gZGUgYWN1ZXJkbyBjb24gbG9zIHSOcm1pbm9zIGRlIGVzdGEgbGljZW5jaWEsIHB1bHNlICJObyBhY2VwdGFyLiI=</data>
			<key>ID</key>
			<string>5003</string>
			<key>Name</key>
			<string>Spanish</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYIRnJhbo1haXMIQWNjZXB0ZXIHUmVmdXNlcghJbXByaW1lcg5FbnJlZ2lzdHJlci4uLrpTaSB2b3VzIGFjY2VwdGV6IGxlcyB0ZXJtZXMgZGUgbGEgcHKOc2VudGUgbGljZW5jZSwgY2xpcXVleiBzdXIgIkFjY2VwdGVyIiBhZmluIGQnaW5zdGFsbGVyIGxlIGxvZ2ljaWVsLiBTaSB2b3VzIG4nkHRlcyBwYXMgZCdhY2NvcmQgYXZlYyBsZXMgdGVybWVzIGRlIGxhIGxpY2VuY2UsIGNsaXF1ZXogc3VyICJSZWZ1c2VyIi4=</data>
			<key>ID</key>
			<string>5004</string>
			<key>Name</key>
			<string>French</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYISXRhbGlhbm8HQWNjZXR0bwdSaWZpdXRvBlN0YW1wYQtSZWdpc3RyYS4uLn9TZSBhY2NldHRpIGxlIGNvbmRpemlvbmkgZGkgcXVlc3RhIGxpY2VuemEsIGZhaSBjbGljIHN1ICJBY2NldHRvIiBwZXIgaW5zdGFsbGFyZSBpbCBzb2Z0d2FyZS4gQWx0cmltZW50aSBmYWkgY2xpYyBzdSAiUmlmaXV0byIu</data>
			<key>ID</key>
			<string>5005</string>
			<key>Name</key>
			<string>Italian</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYISmFwYW5lc2UKk6+I04K1gtyCtwyTr4jTgrWC3IK5gvEIiPON/IK3gukHlduRti4uLrSWe4Ncg3SDZ4NFg0eDQY5nl3CLlpH4jF+W8YLMj/CMj4LJk6+I04KzguqC6Y/qjYeCyYLNgUGDXIN0g2eDRYNHg0GC8INDg5ODWINngVuDi4K3gumCvYLfgsmBdZOviNOCtYLcgreBdoLwiZ+CtYLEgq2CvoKzgqKBQoFAk6+I04KzguqCyIKij+qNh4LJgs2BQYF1k6+I04K1gtyCuYLxgXaC8ImfgrWCxIKtgr6Cs4KigUI=</data>
			<key>ID</key>
			<string>5006</string>
			<key>Name</key>
			<string>Japanese</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYKTmVkZXJsYW5kcwJKYQNOZWUFUHJpbnQJQmV3YWFyLi4upEluZGllbiB1IGFra29vcmQgZ2FhdCBtZXQgZGUgdm9vcndhYXJkZW4gdmFuIGRlemUgbGljZW50aWUsIGt1bnQgdSBvcCAnSmEnIGtsaWtrZW4gb20gZGUgcHJvZ3JhbW1hdHV1ciB0ZSBpbnN0YWxsZXJlbi4gSW5kaWVuIHUgbmlldCBha2tvb3JkIGdhYXQsIGtsaWt0IHUgb3AgJ05lZScu</data>
			<key>ID</key>
			<string>5007</string>
			<key>Name</key>
			<string>Dutch</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYGU3ZlbnNrCEdvZGuKbm5zBkF2YppqcwhTa3JpdiB1dAhTcGFyYS4uLpNPbSBEdSBnb2Rrim5uZXIgbGljZW5zdmlsbGtvcmVuIGtsaWNrYSBwjCAiR29ka4pubnMiIGaaciBhdHQgaW5zdGFsbGVyYSBwcm9ncmFtcHJvZHVrdGVuLiBPbSBEdSBpbnRlIGdvZGuKbm5lciBsaWNlbnN2aWxsa29yZW4sIGtsaWNrYSBwjCAiQXZimmpzIi4=</data>
			<key>ID</key>
			<string>5008</string>
			<key>Name</key>
			<string>Swedish</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYRUG9ydHVndZBzLCBCcmFzaWwJQ29uY29yZGFyCURpc2NvcmRhcghJbXByaW1pcglTYWx2YXIuLi6MU2UgZXN0hyBkZSBhY29yZG8gY29tIG9zIHRlcm1vcyBkZXN0YSBsaWNlbo1hLCBwcmVzc2lvbmUgIkNvbmNvcmRhciIgcGFyYSBpbnN0YWxhciBvIHNvZnR3YXJlLiBTZSBui28gZXN0hyBkZSBhY29yZG8sIHByZXNzaW9uZSAiRGlzY29yZGFyIi4=</data>
			<key>ID</key>
			<string>5009</string>
			<key>Name</key>
			<string>Brazilian Portuguese</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYSU2ltcGxpZmllZCBDaGluZXNlBM2s0uIGsrvNrNLiBLTy06EGtOa0oqGtVMjnufvE+s2s0uKxvtDtv8nQrdLptcTM9b/uo6zH67C0obDNrNLiobHAtLCy17C0y8jtvP6ho8jnufvE+rK7zazS4qOsx+uwtKGwsrvNrNLiobGhow==</data>
			<key>ID</key>
			<string>5010</string>
			<key>Name</key>
			<string>Simplified Chinese</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYTVHJhZGl0aW9uYWwgQ2hpbmVzZQSmULdOBqSjplC3TgSmQ6ZMBsB4pnOhS1CmcKpHsXqmULdOpbuzXKVpw9K4zKq6sfi02qFBvdCr9qGnplC3TqGopUimd7jLs27F6aFDpnCqR6SjplC3TqFBvdCr9qGnpKOmULdOoaihQw==</data>
			<key>ID</key>
			<string>5011</string>
			<key>Name</key>
			<string>Traditional Chinese</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYFRGFuc2sERW5pZwVVZW5pZwdVZHNrcml2CkFya2l2ZXIuLi6YSHZpcyBkdSBhY2NlcHRlcmVyIGJldGluZ2Vsc2VybmUgaSBsaWNlbnNhZnRhbGVuLCBza2FsIGR1IGtsaWtrZSBwjCDSRW5pZ9MgZm9yIGF0IGluc3RhbGxlcmUgc29mdHdhcmVuLiBLbGlrIHCMINJVZW5pZ9MgZm9yIGF0IGFubnVsbGVyZSBpbnN0YWxsZXJpbmdlbi4=</data>
			<key>ID</key>
			<string>5012</string>
			<key>Name</key>
			<string>Danish</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYFU3VvbWkISHl2imtzeW4KRW4gaHl2imtzeQdUdWxvc3RhCVRhbGxlbm5hyW9IeXaKa3N5IGxpc2Vuc3Npc29waW11a3NlbiBlaGRvdCBvc29pdHRhbWFsbGEg1Uh5doprc3nVLiBKb3MgZXQgaHl2imtzeSBzb3BpbXVrc2VuIGVodG9qYSwgb3NvaXRhINVFbiBoeXaKa3N51S4=</data>
			<key>ID</key>
			<string>5013</string>
			<key>Name</key>
			<string>Finnish</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYRRnJhbo1haXMgY2FuYWRpZW4IQWNjZXB0ZXIHUmVmdXNlcghJbXByaW1lcg5FbnJlZ2lzdHJlci4uLrpTaSB2b3VzIGFjY2VwdGV6IGxlcyB0ZXJtZXMgZGUgbGEgcHKOc2VudGUgbGljZW5jZSwgY2xpcXVleiBzdXIgIkFjY2VwdGVyIiBhZmluIGQnaW5zdGFsbGVyIGxlIGxvZ2ljaWVsLiBTaSB2b3VzIG4nkHRlcyBwYXMgZCdhY2NvcmQgYXZlYyBsZXMgdGVybWVzIGRlIGxhIGxpY2VuY2UsIGNsaXF1ZXogc3VyICJSZWZ1c2VyIi4=</data>
			<key>ID</key>
			<string>5014</string>
			<key>Name</key>
			<string>French Canadian</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYGS29yZWFuBLW/wMcJtb/AxyC+yMfUBsfBuLDGrgfA+sDlLi4ufrvnv+sgsOi+4LytwMcgs7u/67+hILW/wMfHz7jpLCAitb/AxyIgtNzD37imILStt68gvNLHwcauv/6+7rimILyzxKHHz73KvcO/wC4gtb/Ax8fPwfYgvsq0wrTZuOksICK1v8DHIL7Ix9QiILTcw9+4piC0qbijvcq9w7/ALg==</data>
			<key>ID</key>
			<string>5015</string>
			<key>Name</key>
			<string>Korean</string>
		</dict>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAYFTm9yc2sERW5pZwlJa2tlIGVuaWcIU2tyaXYgdXQKQXJraXZlci4uLqNIdmlzIERlIGVyIGVuaWcgaSBiZXN0ZW1tZWxzZW5lIGkgZGVubmUgbGlzZW5zYXZ0YWxlbiwga2xpa2tlciBEZSBwjCAiRW5pZyIta25hcHBlbiBmb3IgjCBpbnN0YWxsZXJlIHByb2dyYW12YXJlbi4gSHZpcyBEZSBpa2tlIGVyIGVuaWcsIGtsaWtrZXIgRGUgcIwgIklra2UgZW5pZyIu</data>
			<key>ID</key>
			<string>5016</string>
			<key>Name</key>
			<string>Norwegian</string>
		</dict>
	</array>
	<key>TEXT</key>
	<array>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data></data>
			<key>ID</key>
			<string>5000</string>
			<key>Name</key>
			<string>English SLA</string>
		</dict>
	</array>
	<key>TMPL</key>
	<array>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>E0RlZmF1bHQgTGFuZ3VhZ2UgSUREV1JEBUNvdW50T0NOVAQqKioqTFNUQwtzeXMgbGFuZyBJRERXUkQebG9jYWwgcmVzIElEIChvZmZzZXQgZnJvbSA1MDAwRFdSRBAyLWJ5dGUgbGFuZ3VhZ2U/RFdSRAQqKioqTFNURQ==</data>
			<key>ID</key>
			<string>128</string>
			<key>Name</key>
			<string>LPic</string>
		</dict>
	</array>
	<key>plst</key>
	<array>
		<dict>
			<key>Attributes</key>
			<string>0x0050</string>
			<key>Data</key>
			<datadata>
			<key>ID</key>
			<string>0</string>
			<key>Name</key>
			<string></string>
		</dict>
	</array>
	<key>styl</key>
	<array>
		<dict>
			<key>Attributes</key>
			<string>0x0000</string>
			<key>Data</key>
			<data>AAMAAAAAAAwACQAUAAAAAAAAAAAAAAAAACcADAAJABQBAAAAAAAAAAAAAAAAKgAMAAkAFAAAAAAAAAAAAAA=</data>
			<key>ID</key>
			<string>5000</string>
			<key>Name</key>
			<string>English SLA</string>
		</dict>
	</array>
</dict>
</plist>
