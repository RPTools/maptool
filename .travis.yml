# Language is set to Java and we build using the Gradle wrapper.
# It would be nice if we could just run "gradlew wrapper" and let it
# update itself, but it currently downloads the stable release of
# gradle-3.2 and we need 4.x+ for the build to work with Java 9 (the
# older version can't parse the 'x.y.z' version string from Java 9).
language: java
sudo: false
script: ./gradlew build

# We have ./.travis/installer.sh to do any installation that is required
# that can't be done using builtin Travis tools.  For both Linux and
# macOS, that means Gradle 4.x, but for macOS it also means downloading
# and installing the Java 9 JDK.  See the contents of the script for
# version number information.
matrix:
    include:
      - os: linux
        jdk: oraclejdk9
        addons:
          apt:
            packages:
                - oracle-java9-installer
                - fakeroot
      - os: osx
        osx_image: xcode9.2
        before_install:
            - brew update
            - brew cask reinstall java
            - java -version

# Shamelessly copied from Jamz's TokenTool configuration file. :)
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
  - "$HOME/.gradle/caches/"
  - "$HOME/.gradle/wrapper/"

# This will cause a deploy back to GitHub for any tagged commit.  Note
# that tagging from the command line seems to require the "-a" option
# when tagging in order to trigger Travis to deploy.  Use the Travis
# "Settings" for your repo to add the DEPLOYMENT_KEY variable; the value
# should be GitHub's _personal OAuth token_.
before_deploy:
  - ./gradlew deploy
deploy:
  provider: releases
  api_key: $DEPLOYMENT_KEY
  file_glob: true
  file: releases/release-*/*
  overwrite: true
  skip_cleanup: true
  # The 'draft' tag prevents the release from being public unless/until
  # the release is edited at github.com and the state changed.
  draft: true
  on:
    repo: RPTools/maptool
    tags: true
